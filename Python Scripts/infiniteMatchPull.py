# Code Written by: Alex Neumann
# CIS Honors Thesis
# Spring - Fall 2015 - Barrett Honors College

# use 'pip install requests' to get the 'requests' library on your system
import requests
import json
import time # useful in throttling API requests
import random
import datetime
from datetime import date

# Riot API key -
APIkey = 'API_KEY_HERE'

# Store the summonerIDs that were generated by "findLeagues.py"
leagueID = [34563833, 57386371, 27239222, 54977213, 44283270, 
237707, 20054964, 28677233, 32672963, 20972802,
21641924, 28579580, 43411321, 37960941, 24510187,
24086402, 36959138, 34207640, 20205656, 23459976, 
31757762, 45659659, 46091942, 19034363, 28896755, 
38794940, 29643998, 39161871, 58463598, 22213267,
30079983, 25968634, 28374712, 36511463, 28706391,
24930035, 586610, 45434863, 67929146, 37173738]

# tracks the names of roughly 8,000 diamond level players
validPlayerNames = []

# track the ID of all players in the player_pool
player_pool_id = []

# Loop through the diamond leagues and create a list that holds the names of all players in these leagues (roughly 8000)
for x in range (0, len(leagueID)):
	#time.sleep(1)
	# store ID of the player
	tempID = leagueID[x]
	validPlayers = requests.get("https://na.api.pvp.net/api/lol/na/v2.5/league/by-summoner/" + str(tempID) + "?api_key=" + APIkey)
	players = json.loads(validPlayers.content.decode('utf-8'))
	print("League # " + str(x) + " - " + str(players[str(tempID)][0]["tier"]))
	for j in range (0, len(players[str(tempID)][0]["entries"])):
		try:
			validPlayerNames.append(players[str(tempID)][0]["entries"][j]["playerOrTeamName"])	
			player_pool_id.append(players[str(tempID)][0]["entries"][j]["playerOrTeamId"])
		except:
			print("Finding players in League # " + str(x) + " FAILED.")

print("Now tracking " + str(len(player_pool_id)) + " players...")

player_pool = validPlayerNames
keepLooping = "true"
currentCycle = 0
fileName = 0
# track the matchIDs that have been recorded already, this will mitigate the problem of recording duplicates
# note: duplicates can still be generated from the other scripts
matchIDcollection = []

# make a try-exception so I can interrupt the While loop and have the data save to the file correctly
try:
	# start the while loop
	while (keepLooping == "true"):
		print("Starting new file for next iteration...")
		time.sleep(5)
		fileName = fileName + 1
		with open("infiniteMatchPull_Output" + str(fileName) + ".csv","w") as output:
			output.write("Match #, MATCH_ID, Summoner, Summoner_ID, Champion_id, Champion, Champion_KDA, P_Champion_winrate, P_Champion_gamesplayed, Season Games Played, Season Winrate, Season KDA, Side, DamageType, Role, Match Outcome\n")
			# start for loop to go through all player IDs
			for b in range(0,len(player_pool_id)):
				# try-catch statement
				try:
					currentGame = requests.get("https://na.api.pvp.net/observer-mode/rest/consumer/getSpectatorGameInfo/NA1/" + str(player_pool_id[b]) + "?api_key=" + APIkey)
					
					if str(currentGame.status_code) == '404':
						# player is not currently playing, skip iteration
						print("Summoner #" + str(b) + " is NOT currently playing")
					else:
						currentGame_data = json.loads(currentGame.content.decode('utf-8'))	
						
						# check if the current game is a RANKED SOLO QUEUE game, we do not want to track any other game mode
						if currentGame_data["gameQueueConfigId"] != 4:
							print("Summoner #" + str(b) + " is currently playing, but not in a RANKED SOLO QUEUE match.")
						elif currentGame_data["gameQueueConfigId"] == 4:
							print("Summoner #" + str(b) + " is currently playing a RANKED SOLO QUEUE match.")
							
							if currentGame_data["gameId"] not in matchIDcollection:
								matchID = currentGame_data["gameId"]
								matchIDcollection.append(matchID)
								# summoner IDs of all players
								playerSummonerID = []
								# The id of the champion being played by each player
								playerChampionID = []	
								# what side did the player start on? players 1-5 = Blue, 6-10 = Red
								playerSide = ['Blue','Blue','Blue','Blue','Blue','Red','Red','Red','Red','Red']
								# name of the champion they are playing
								playerChampionName = []
								# the players overall Kill Death Assist ratio on the champion they played in the match
								playerChampionKDA = []
								# the total number of games the player has played on a specific champion
								playerChampionGamesPlayed = []
								# overall winrate of the player on a specific champion
								playerChampionWinrate = []
								# total solo queue ranked games played by the player during the current season
								playerTotalSeasonGamesPlayed = []
								# total overall winrate of the player for the current season
								playerTotalSeasonWinrate = []
								# total overall Kill Death Assist ratio for the current season
								playerTotalSeasonKDA = []
								# the player's winrate over the last 3 ranked solo queue matches
								player3RecentWinrate = []
								# the player's Kill Death Assist ratio over the last 3 ranked solo queue matches
								player3RecentKDA = []
								# we will have to check the outcome later
								playerMatchOutcome = ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?']
								# primary damage type of champion
								championDamageType = []			
								# role: Assassin, Fighter, Mage... Labels given to champions by Riot.
								championRole = []
								
								# find and store basic info about each player
								for c in range(0,10):
									playerSummonerID.append(currentGame_data["participants"][c]["summonerId"])
									champID = currentGame_data["participants"][c]["championId"]
									playerChampionID.append(champID)
									
									Champion = ''

									# Find the champion matching the champion id								
									if champID ==1:
										Champion = 'Annie'
									if champID ==2:
										Champion = 'Olaf'
									if champID ==3:
										Champion = 'Galio'
									if champID ==4:
										Champion = 'Twisted Fate'
									if champID ==5:
										Champion = 'Xin Zhao'
									if champID ==6:
										Champion = 'Urgot'
									if champID ==7:
										Champion = 'LeBlanc'
									if champID ==8:
										Champion = 'Vladimir'
									if champID ==9:	
										Champion = 'Fiddlesticks'
									if champID ==10:	
										Champion = 'Kayle'
									if champID ==11:	
										Champion = 'Master Yi'
									if champID ==12:
										Champion = 'Alistar'
									if champID ==13:
										Champion = 'Ryze'
									if champID ==14:
										Champion = 'Sion'
									if champID ==15:
										Champion = 'Sivir'
									if champID ==16:
										Champion = 'Soraka'
									if champID ==17:
										Champion = 'Teemo'
									if champID ==18:
										Champion = 'Tristana'
									if champID ==19:
										Champion = 'Warwick'
									if champID ==20:
										Champion = 'Nunu'
									if champID ==21:
										Champion = 'Miss Fortune'
									if champID ==22:
										Champion = 'Ashe'
									if champID ==23:
										Champion = 'Tryndamere'
									if champID ==24:
										Champion = 'Jax'
									if champID ==25:
										Champion = 'Morgana'
									if champID ==26:
										Champion = 'Zilean'
									if champID ==27:
										Champion = 'Singed'
									if champID ==28:
										Champion = 'Evelynn'
									if champID ==29:
										Champion = 'Twitch'
									if champID ==30:
										Champion = 'Karthus'
									if champID ==31:
										Champion = 'Cho Gath'
									if champID ==32:
										Champion = 'Amumu'
									if champID ==33:
										Champion = 'Rammus'
									if champID ==34:
										Champion = 'Anivia'
									if champID ==35:
										Champion = 'Shaco'
									if champID ==36:
										Champion = 'Dr. Mundo'
									if champID ==37:
										Champion = 'Sona'
									if champID ==38:
										Champion = 'Kassadin'
									if champID ==39:
										Champion = 'Irelia'
									if champID ==40:
										Champion = 'Janna'
									if champID ==41:
										Champion = 'Gangplank'
									if champID ==42:
										Champion = 'Corki'
									if champID ==43:
										Champion = 'Karma'
									if champID ==44:
										Champion = 'Taric'
									if champID ==45:
										Champion = 'Veigar'
									if champID ==48:
										Champion = 'Trundle'
									if champID ==50:
										Champion = 'Swain'
									if champID ==51:
										Champion = 'Caitlyn'
									if champID ==53:
										Champion = 'Blitzcrank'
									if champID ==54:
										Champion = 'Malphite'
									if champID ==55:
										Champion = 'Katarina'
									if champID ==56:
										Champion = 'Nocturne'
									if champID ==57:
										Champion = 'Maokai'
									if champID ==58:
										Champion = 'Renekton'
									if champID ==59:
										Champion = 'Jarvan IV'
									if champID ==60:
										Champion = 'Elise'
									if champID ==61:
										Champion = 'Orianna'
									if champID ==62:
										Champion = 'Wukong'
									if champID ==63:
										Champion = 'Brand'
									if champID ==64:
										Champion = 'Lee Sin'
									if champID ==67:
										Champion = 'Vayne'
									if champID ==68:
										Champion = 'Rumble'
									if champID ==69:
										Champion = 'Cassiopeia'
									if champID ==72:
										Champion = 'Skarner'
									if champID ==74:
										Champion = 'Heimerdinger'
									if champID ==75:
										Champion = 'Nasus'
									if champID ==76:
										Champion = 'Nidalee'
									if champID ==77:
										Champion = 'Udyr'
									if champID ==78:
										Champion = 'Poppy'
									if champID ==79:
										Champion = 'Gragas'
									if champID ==80:
										Champion = 'Pantheon'
									if champID ==81:
										Champion = 'Ezreal'
									if champID ==82:
										Champion = 'Mordekaiser'
									if champID ==83:
										Champion = 'Yorick'
									if champID ==84:
										Champion = 'Akali'
									if champID ==85:
										Champion = 'Kennen'
									if champID ==86:
										Champion = 'Garen'
									if champID ==89:
										Champion = 'Leona'
									if champID ==90:
										Champion = 'Malzahar'
									if champID ==91:
										Champion = 'Talon'
									if champID ==92:
										Champion = 'Riven'
									if champID ==96:
										Champion = 'Kog Maw'
									if champID ==98:
										Champion = 'Shen'
									if champID ==99:
										Champion = 'Lux'
									if champID ==101:
										Champion = 'Xerath'
									if champID ==102:
										Champion = 'Shyvana'
									if champID ==103:
										Champion = 'Ahri'
									if champID ==104:
										Champion = 'Graves'
									if champID ==105:
										Champion = 'Fizz'
									if champID ==106:
										Champion = 'Volibear'
									if champID ==107:
										Champion = 'Rengar'
									if champID ==110:
										Champion = 'Varus'
									if champID ==111:
										Champion = 'Nautilus'
									if champID ==112:
										Champion = 'Viktor'
									if champID ==113:
										Champion = 'Sejuani'
									if champID ==114:
										Champion = 'Fiora'
									if champID ==115:
										Champion = 'Ziggs'
									if champID ==117:
										Champion = 'Lulu'
									if champID ==119:
										Champion = 'Draven'
									if champID ==120:
										Champion = 'Hecarim'
									if champID ==121:
										Champion = 'Kha Zix'
									if champID ==122:
										Champion = 'Darius'
									if champID ==126:
										Champion = 'Jayce'
									if champID ==127:
										Champion = 'Lissandra'
									if champID ==131:
										Champion = 'Diana'
									if champID ==133:
										Champion = 'Quinn'
									if champID ==134:
										Champion = 'Syndra'
									if champID ==143:
										Champion = 'Zyra'
									if champID ==150:
										Champion = 'Gnar'
									if champID ==154:
										Champion = 'Zac'
									if champID ==157:
										Champion = 'Yasuo'
									if champID ==161:
										Champion = 'Vel Koz'
									if champID ==201:
										Champion = 'Braum'
									if champID ==222:
										Champion = 'Jinx'
									if champID ==236:
										Champion = 'Lucian'
									if champID ==238:
										Champion = 'Zed'
									if champID ==245:
										Champion = 'Ekko'
									if champID ==254:
										Champion = 'Vi'
									if champID ==266:
										Champion = 'Aatrox'
									if champID ==267:
										Champion = 'Nami'
									if champID ==268:
										Champion = 'Azir'
									if champID ==412:
										Champion = 'Thresh'
									if champID ==421:
										Champion = 'Rek Sai'
									if champID ==429:
										Champion = 'Kalista'
									if champID ==432:
										Champion = 'Bard'
									if champID ==223:
										Champion = 'Tahm Kench'
									
									playerChampionName.append(Champion)
									
									# use the ID to determine the primary damage type of the champion ("Heavy Attack Damage", "Slightly Attack Damage", "Heavy Ability Power", "Slightly Ability Power"
									strongAD = [67,122,119,114,11,15,91,23,238,56,133,92,51,86,121,2,80,421,58,29,62,266,22,104,126,222,64,236,107,102,48,6,254,5,120,429,18,77,157,41,59,96,21,110,106,19]
									slightAD = [42,39,35,14,72,12,81,150,89,75,78]
									slightAP = [24,98,4,83,432,53,201,131,36,60,105,10,85,33,113,44,412,268,245,79,54,111,76,223,17]
									strongAP = [84,28,3,117,57,82,267,20,27,37,31,40,154,143,103,38,55,61,68,16,32,74,127,8,26,63,69,9,43,99,90,25,50,134,115,1,30,13,45,161,112,34,7,101]
									
									# a balanced team composition will have number close to 25 - the average
									if champID in strongAD:
										championDamageType.append(40)
									elif champID in slightAD:
										championDamageType.append(30)
									elif champID in slightAP:
										championDamageType.append(20)
									elif champID in strongAP:
										championDamageType.append(10)
									else:
									# error
										championDamageType.append(404)
								
									assassin = [84,245,28,105,38,55,121,7,11,76,56,107,35,91,238]
									fighter = [266,122,131,36,114,41,86,150,79,120,39,24,126,10,64,82,75,2,80,78,421,58,92,68,102,72,48,23,77,254,106,19,62,5,157,83]
									mage = [103,34,1,268,63,69,60,9,74,43,30,85,127,99,90,25,61,13,50,134,4,45,161,112,8,101,115,143]
									marksman = [22,51,42,119,81,104,222,429,96,236,21,133,15,17,18,29,6,110,67]
									support = [432,201,40,117,267,20,37,16,223,44,412,26]
									tank = [12,32,53,31,3,59,89,54,57,111,33,113,98,27,14,154]
									
									if champID in assassin:
										championRole.append('Assassin')
									elif champID in fighter:
										championRole.append('Fighter')
									elif champID in mage:
										championRole.append('Mage')
									elif champID in marksman:
										championRole.append('Marksman')
									elif champID in support:
										championRole.append('Support')
									elif champID in tank:
										championRole.append('Tank')
									else:
										championRole.append('Error')

								# now find the stats for each players
								for d in range(0,10):
									playerStats = requests.get("https://na.api.pvp.net/api/lol/na/v1.3/stats/by-summoner/" + str(playerSummonerID[d]) + "/ranked?season=SEASON2015&api_key=" + APIkey)
									playerStats_data = json.loads(playerStats.content.decode('utf-8'))
									
									assist = 0
									kills = 0
									deaths = 0
									gamesPlayedOnChamp = 0
									gamesWonOnChamp = 0 
									gamesLostOnChamp = 0

									for e in range (0, len(playerStats_data["champions"])):
										if playerStats_data["champions"][e]["id"] == playerChampionID[d]:
											assist = playerStats_data["champions"][e]["stats"]["totalAssists"]
											kills = playerStats_data["champions"][e]["stats"]["totalChampionKills"]
											deaths = playerStats_data["champions"][e]["stats"]["totalDeathsPerSession"]			
											gamesPlayedOnChamp = playerStats_data["champions"][e]["stats"]["totalSessionsPlayed"]
											gamesWonOnChamp = playerStats_data["champions"][e]["stats"]["totalSessionsWon"]
											gamesLostOnChamp = playerStats_data["champions"][e]["stats"]["totalSessionsLost"]
							
									if gamesPlayedOnChamp == 0 and gamesWonOnChamp == 0 and gamesLostOnChamp == 0:
										champ_winrate = 0
										gamesLostOnChamp = 0
										gamesWonOnChamp = 0
										gamesPlayedOnChamp = 0
									else:
										champ_winrate = round((gamesWonOnChamp/gamesPlayedOnChamp),4) * 100
						
									totalSeasonGames = 0
									totalSeasonGamesWon = 0
									seasonDeaths = 0
									seasonAssists = 0
									seasonKills = 0
									
									for m in range (0, len(playerStats_data["champions"])):
										if playerStats_data["champions"][m]["id"] == 0:
											totalSeasonGames = playerStats_data["champions"][m]["stats"]["totalSessionsPlayed"]
											totalSeasonGamesWon = playerStats_data["champions"][m]["stats"]["totalSessionsWon"]
											seasonDeaths = playerStats_data["champions"][m]["stats"]["totalDeathsPerSession"]
											seasonAssists = playerStats_data["champions"][m]["stats"]["totalAssists"]
											seasonKills = playerStats_data["champions"][m]["stats"]["totalChampionKills"]
									
									# calculate season KDA
									if seasonDeaths == 0 and seasonAssists == 0 and seasonKills == 0:
										seasonKDA = 0.00
									elif seasonDeaths == 0:
										seasonKDA = seasonKills + seasonAssists
									else:
										seasonKDA = round((seasonKills + seasonAssists)/(seasonDeaths), 2)
									
									# add season KDA to array
									playerTotalSeasonKDA.append(seasonKDA)
											
									# add season winrate to array
									totalSeasonWinrate = round((totalSeasonGamesWon/totalSeasonGames),4) * 100
									
									playerTotalSeasonWinrate.append(totalSeasonWinrate)
									playerTotalSeasonGamesPlayed.append(totalSeasonGames)
									playerChampionGamesPlayed.append(gamesPlayedOnChamp)
									#print("---------------------")
									#print("Player id: " + str(playerSummonerID[d]))
									#print("Champion id: " + str(playerChampionID[d]))
									#print("Entered:   " + str(playerChampionGamesPlayed[d]) + "    for games played on champ.")
									playerChampionWinrate.append(champ_winrate)
									
									# calculate champion KDA
									if deaths == 0 and assist == 0 and kills == 0:
										champ_kda = 0.00
									elif deaths == 0:
										champ_kda = kills + assist
									else:
										champ_kda = round((kills + assist)/(deaths), 2)
									
									playerChampionKDA.append(champ_kda)	
									


								# write data to file with this format:
								# MATCH_ID, Summoner, Summoner_ID, Champion_id, Champion_KDA, P_Champion_winrate, P_Champion_gamesplayed, 
								# 3RecentWinrate, 3RecentKDA, Season Games Played, Season Winrate, Season KDA, Side, Highest_Rank, Match_KDA, Outcome

								playerNames = ['P1','P2','P3','P4','P5','P6','P7','P8','P9','P10']
								matchNum = str(currentCycle)

							
								# Write output to file
								for f in range (0,10):
									output.write(str(matchNum) + ","
									+ str(matchID) + ","
									+ playerNames[f] + "," 
									+ str(playerSummonerID[f]) + "," 
									+ str(playerChampionID[f]) + ","
									+ str(playerChampionName[f]) + "," 
									+ str(playerChampionKDA[f]) + "," 
									+ str(playerChampionWinrate[f]) + ","
									+ str(playerChampionGamesPlayed[f]) + ","
									+ str(playerTotalSeasonGamesPlayed[f]) + ","
									+ str(playerTotalSeasonWinrate[f]) + ","
									+ str(playerTotalSeasonKDA[f]) + ","
									+ playerSide[f] + "," 									
									+ str(championDamageType[f]) + ","
									+ str(championRole[f]) + ","
									+ str(playerMatchOutcome[f]))
									output.write("\n")
								print("    Match #" + matchNum + " recorded.")
								currentCycle = currentCycle + 1
							else:
								print("    Match ID was already recorded... moving on")
				except Exception as e: 
					print(e)
					print("I crashed :(")				
		output.close()
except KeyboardInterrupt:
	output.close()
